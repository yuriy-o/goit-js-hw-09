{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,YAAaL,SAASC,cAAc,0BAOtCH,KAAKC,KAAKO,iBAAiB,UAE3B,SAAuBC,EAAUC,G,kBAQ7BC,QAAQC,IAAI,aAA6BC,OAAhBC,EAAO,WAAWD,OAAFE,IAEzC,IAAMC,EAAWZ,EAAaW,EAAIE,EAElB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EACEM,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqCd,OAAZE,EAAI,EAAE,QAAeF,OAATG,EAAS,QAIlDI,EACEK,EAAA3B,GAAS4B,OAAOE,QACd,sBAAoCf,OAAZE,EAAI,EAAE,QAAeF,OAATG,EAAS,O,GAIlDA,E,KA5BPP,EAASoB,iBACT,IAAMzB,EAAa0B,OAAO9B,KAAKI,WAAW2B,OACpCd,EAAOa,OAAO9B,KAAKK,UAAU0B,OAC7BjB,EAASd,KAAKM,YAAYyB,MAChCpB,QAAQC,IAAI,iBAAwCC,OAAvBT,EAAW,cAAiBS,OAALI,IAEpD,IAAK,IAAIe,EAAI,EAAGA,EAAIlB,EAAQkB,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nrefs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  inputButton: document.querySelector('button[type=\"submit\"]'),\n};\n\n// console.log(`delay: ${delay}, step: ${step}, amount: ${amount}`);\n// Notiflix.Notify.success(`delay: ${delay}, step: ${step}, amount: ${amount}`);\n// Notiflix.Notify.failure(`delay: ${delay}, step: ${step}, amount: ${amount}`);\n\nrefs.form.addEventListener('submit', createPromise);\n\nfunction createPromise(position, delay) {\n  position.preventDefault();\n  const inputDelay = Number(refs.inputDelay.value);\n  const step = Number(refs.inputStep.value);\n  const amount = refs.inputAmount.value;\n  console.log(`'inputDelay': ${inputDelay}, 'step': ${step}`);\n\n  for (let i = 0; i < amount; i += 1) {\n    console.log(`'amount': ${amount}, 'i': ${i}`);\n\n    const sumDelay = inputDelay + i * step;\n\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${i + 1} in ${sumDelay}ms`\n            )\n          );\n        } else {\n          reject(\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${i + 1} in ${sumDelay}ms`\n            )\n          );\n        }\n      }, sumDelay);\n    });\n  }\n}\n\n//??\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iU1Pc","parcelRequire","refs","form","document","querySelector","inputDelay","inputStep","inputAmount","inputButton","addEventListener","position","delay","console","log","concat","amount","i","sumDelay","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","preventDefault","Number","value","i1","_loop"],"version":3,"file":"03-promises.70ca5de8.js.map"}