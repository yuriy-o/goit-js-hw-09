{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,YAAaL,SAASC,cAAc,0BAGtCH,EAAKC,KAAKO,iBAAiB,UAO3B,SAAuBC,EAAUC,GAC/BD,EAASE,iBAET,IAAK,IAAIC,EAAI,EAAGA,EAAIC,EAAQD,GAAK,EAAG,CAClCE,QAAQC,IAAI,aAAaF,WAAgBD,KAEzC,MAAMI,EAAWC,EAAaL,EAAIM,EAElB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EACEM,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBhB,EAAK,QAASI,QAIvCK,EACEK,EAAA5B,GAAS6B,OAAOE,QACd,sBAAoBjB,EAAK,QAASI,OAAc,GAIrDA,EAAS,G,KA9BlB,MAAMC,EAAaa,OAAO9B,EAAKI,WAAW2B,OACpCb,EAAOY,OAAO9B,EAAKK,UAAU0B,OAC7BlB,EAASb,EAAKM,YAAYyB,MAChCjB,QAAQC,IAAI,iBAAiBE,cAAuBC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  inputButton: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', createPromise);\n\nconst inputDelay = Number(refs.inputDelay.value);\nconst step = Number(refs.inputStep.value);\nconst amount = refs.inputAmount.value;\nconsole.log(`'inputDelay': ${inputDelay}, 'step': ${step}`);\n\nfunction createPromise(position, delay) {\n  position.preventDefault();\n\n  for (let i = 0; i < amount; i += 1) {\n    console.log(`'amount': ${amount}, 'i': ${i}`);\n\n    const sumDelay = inputDelay + i * step;\n\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${i + 1} in ${sumDelay}ms`\n            )\n          );\n        } else {\n          reject(\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${i + 1} in ${sumDelay}ms`\n            )\n          );\n        }\n      }, sumDelay);\n    });\n  }\n}\n\n//??\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","inputButton","addEventListener","position","delay","preventDefault","i","$47d4ff9957288465$var$amount","console","log","sumDelay","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","Number","value"],"version":3,"file":"03-promises.28b0a69a.js.map"}