{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBAE7CF,EAAOM,iBAAiB,UAExB,SAAuBC,EAAUC,GAC/BD,EAASE,iBACT,MAAMC,EAAaP,EAAaQ,MAC1BC,EAAOR,EAAYO,MACnBE,EAASR,EAAcM,MAC7BG,QAAQC,IAAI,iBAAiBL,cAAuBE,KAEpD,IAAK,IAAII,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAAG,CAClCF,QAAQC,IAAI,aAAaF,WAAgBG,KAEzC,MAAMC,EAAWP,EAAaM,EAAIJ,EAElB,IAAIM,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EACEM,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBX,EAAK,QAASC,QAIvCG,EACEK,EAAA3B,GAAS4B,OAAOE,QACd,sBAAoBZ,EAAK,QAASC,OAAc,GAIrDA,EAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst inputDelayEl = document.querySelector('input[name=\"delay\"]');\nconst inputStepEl = document.querySelector('input[name=\"step\"]');\nconst inputAmountEl = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener('submit', createPromise);\n\nfunction createPromise(position, delay) {\n  position.preventDefault();\n  const inputDelay = inputDelayEl.value;\n  const step = inputStepEl.value;\n  const amount = inputAmountEl.value;\n  console.log(`'inputDelay': ${inputDelay}, 'step': ${step}`);\n\n  for (let i = 0; i < amount; i += 1) {\n    console.log(`'amount': ${amount}, 'i': ${i}`);\n\n    const sumDelay = inputDelay + i * step;\n\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${i + 1} in ${sumDelay}ms`\n            )\n          );\n        } else {\n          reject(\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${i + 1} in ${sumDelay}ms`\n            )\n          );\n        }\n      }, sumDelay);\n    });\n  }\n}\n\n//??\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$inputDelayEl","$47d4ff9957288465$var$inputStepEl","$47d4ff9957288465$var$inputAmountEl","addEventListener","position","delay","preventDefault","inputDelay","value","step","amount","console","log","i","sumDelay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure"],"version":3,"file":"03-promises.ec3784a1.js.map"}