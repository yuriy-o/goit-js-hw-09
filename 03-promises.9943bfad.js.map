{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,YAAaL,SAASC,cAAc,0BAGtCH,EAAKC,KAAKO,iBAAiB,UAE3B,SAAuBC,EAAUC,G,kBAS7BC,QAAQC,IAAI,aAA6BC,OAAhBC,EAAO,WAAWD,OAAFE,IAEzC,IAAMC,EAAWC,EAAaF,EAAIG,EAElB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EACEM,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqCf,OAAZE,EAAI,EAAE,QAAeF,OAATG,EAAS,QAIlDK,EACEK,EAAA5B,GAAS6B,OAAOE,QACd,sBAAoChB,OAAZE,EAAI,EAAE,QAAeF,OAATG,EAAS,O,GAIlDA,E,KA7BPP,EAASqB,iBAET,IAAMb,EAAac,OAAO/B,EAAKI,WAAW4B,OACpCd,EAAYa,OAAO/B,EAAKK,UAAU2B,OAClClB,EAASd,EAAKM,YAAY0B,MAChCrB,QAAQC,IAAI,iBAA6CC,OAA5BI,EAAW,mBAA2BJ,OAAVK,IAEzD,IAAK,IAAIe,EAAI,EAAGA,EAAInB,EAAQmB,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  inputButton: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', createPromise);\n\nfunction createPromise(position, delay) {\n  position.preventDefault();\n\n  const delayValue = Number(refs.inputDelay.value);\n  const stepValue = Number(refs.inputStep.value);\n  const amount = refs.inputAmount.value;\n  console.log(`'delayValue': ${delayValue}, 'stepValue': ${stepValue}`);\n\n  for (let i = 0; i < amount; i += 1) {\n    console.log(`'amount': ${amount}, 'i': ${i}`);\n\n    const sumDelay = delayValue + i * stepValue;\n\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${i + 1} in ${sumDelay}ms`\n            )\n          );\n        } else {\n          reject(\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${i + 1} in ${sumDelay}ms`\n            )\n          );\n        }\n      }, sumDelay);\n    });\n  }\n}\n\n//??\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","inputButton","addEventListener","position","delay","console","log","concat","amount","i","sumDelay","delayValue","stepValue","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","preventDefault","Number","value","i1","_loop"],"version":3,"file":"03-promises.9943bfad.js.map"}